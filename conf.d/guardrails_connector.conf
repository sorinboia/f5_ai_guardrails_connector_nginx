# /etc/nginx/conf/sideband-proxy.conf

map $http_x_sideband_inspect $sideband_inspect {
  default  "";
  "~^(request|response|both|off)$" $http_x_sideband_inspect;
}

# Optional: log level via header too
map $http_x_sideband_log $sideband_log {
  default  "";
  "~^(debug|info|warn|err)$" $http_x_sideband_log;
}

map $http_x_sideband_forward $sideband_request_forward {
  default  "";
  "~^(sequential|parallel)$" $http_x_sideband_forward;
}

js_engine qjs;  
js_path /etc/nginx/njs/;

js_import sideband from sideband.js;
js_import config_api from config_api.js;
js_import collector_api from collector_api.js;
js_import api_keys_api from api_keys_api.js;
js_import patterns_api from patterns_api.js;

# DNS for ngx.fetch (domain in the sideband URL)
resolver 1.1.1.1 8.8.8.8 valid=300s ipv6=off;

# CA bundle so ngx.fetch() can verify HTTPS servers
# Debian/Ubuntu: /etc/ssl/certs/ca-certificates.crt
# RHEL/CentOS:  /etc/pki/tls/certs/ca-bundle.crt
js_fetch_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

upstream backend_upstream {
    server 10.1.10.100:22434;
    keepalive 16;
}

server {
    listen 11434;

    location = /config/ui {
        default_type text/html;
        add_header Cache-Control 'no-store';
        alias /etc/nginx/html/scanner-config.html;
    }

    location /config/ui/ {
        return 302 /config/ui;
    }

    location = /config/ui/keys {
        default_type text/html;
        add_header Cache-Control 'no-store';
        alias /etc/nginx/html/scanner-config.html;
    }

    location /config/ui/keys/ {
        return 302 /config/ui/keys;
    }

    location = /config/ui/patterns {
        default_type text/html;
        add_header Cache-Control 'no-store';
        alias /etc/nginx/html/scanner-config.html;
    }

    location ^~ /config/css/ {
        alias /etc/nginx/html/css/;
        default_type text/css;
        add_header Cache-Control 'no-store';
    }

    location ^~ /config/js/ {
        alias /etc/nginx/html/js/;
        default_type application/javascript;
        add_header Cache-Control 'no-store';
    }

    location /config/ui/patterns/ {
        return 302 /config/ui/patterns;
    }

    location = /collector/ui {
        return 302 /config/ui;
    }

    location = /config/api {
        default_type application/json;
        js_content config_api.handle;
    }

    location = /config/api/keys {
        default_type application/json;
        js_content api_keys_api.handle;
    }

    location = /config/api/patterns {
        default_type application/json;
        js_content patterns_api.handle;
    }

    location = /collector/api {
        default_type application/json;
        js_content collector_api.handle;
    }

    error_log /var/log/nginx/sideband.error.log info;
    access_log /var/log/nginx/sideband.access.log combined;

    # njs handler: read/log, sideband fetch, then forward
    location / {
        js_content sideband.handle;
    }

    location /api/tags {
	proxy_pass http://backend_upstream;

        # Keep this minimal; we don't touch headers/body/method.
        proxy_http_version 1.1;
        proxy_set_header Connection "";  # enable upstream keepalive

    }

    location /backend/ {
	proxy_pass http://backend_upstream/api/chat;
	proxy_http_version 1.1;
        proxy_set_header Connection "";  # enable upstream keepalive

    }

    # Receives the internal redirect; proxies the *original* request unchanged
    location @backend {
        proxy_pass http://backend_upstream;

        # Keep this minimal; we don't touch headers/body/method.
        proxy_http_version 1.1;
        proxy_set_header Connection "";  # enable upstream keepalive
    }
}
