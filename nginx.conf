
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /run/nginx.pid;


load_module modules/ngx_http_js_module.so;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log /var/log/nginx/error.log info;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;


    keyval_zone zone=scan_config:512k state=/var/lib/nginx/state/scan_config.keyval;

    map $request_uri $scan_config_key_inspect_mode {
        default "inspect_mode";
    }
    keyval $scan_config_key_inspect_mode $scan_config_inspect_mode zone=scan_config;

    map $request_uri $scan_config_key_redact_mode {
        default "redact_mode";
    }
    keyval $scan_config_key_redact_mode $scan_config_redact_mode zone=scan_config;

    map $request_uri $scan_config_key_log_level {
        default "log_level";
    }
    keyval $scan_config_key_log_level $scan_config_log_level zone=scan_config;

    map $request_uri $scan_config_key_request_paths {
        default "request_paths";
    }
    keyval $scan_config_key_request_paths $scan_config_request_paths zone=scan_config;

    map $request_uri $scan_config_key_response_paths {
        default "response_paths";
    }
    keyval $scan_config_key_response_paths $scan_config_response_paths zone=scan_config;

    map $request_uri $scan_config_key_request_forward_mode {
        default "request_forward_mode";
    }
    keyval $scan_config_key_request_forward_mode $scan_config_request_forward_mode zone=scan_config;

    map $request_uri $collector_key_total {
        default "collector_total";
    }
    keyval $collector_key_total $collector_collect_total zone=scan_config;

    map $request_uri $collector_key_remaining {
        default "collector_remaining";
    }
    keyval $collector_key_remaining $collector_collect_remaining zone=scan_config;

    map $request_uri $collector_key_entries {
        default "collector_entries";
    }
    keyval $collector_key_entries $collector_entries zone=scan_config;

    include /etc/nginx/conf.d/*.conf;
}


# TCP/UDP proxy and load balancing block
#
#stream {
    # Example configuration for TCP load balancing

    #upstream stream_backend {
    #    zone tcp_servers 64k;
    #    server backend1.example.com:12345;
    #    server backend2.example.com:12345;
    #}

    #server {
    #    listen 12345;
    #    status_zone tcp_server;
    #    proxy_pass stream_backend;
    #}
#}

# NGINX Plus requires a valid JSON Web Token (JWT), available at
#       https://my.f5.com/manage/s/subscriptions
# The token verifies your subscription and sends usage information to F5.
# Learn more about licensing and usage reporting:
#       https://docs.nginx.com/solutions/about-subscription-licenses
# Learn more about the "mgmt" module:
#       https://nginx.org/en/docs/ngx_mgmt_module.html
mgmt {
    # Uncomment to change default reporting values
    usage_report endpoint=product.connect.nginx.com;
    license_token /etc/nginx/license.jwt;

    # Set to 'off' to begin the 180-day reporting enforcement grace period.
    # Reporting must begin or resume before the end of the grace period
    # to ensure continued operation.
    enforce_initial_report off;

    # Set to 'off' to trust all SSL certificates (not recommended).
    # Useful for reporting to NGINX Instance Manager without a local PKI.
    ssl_verify off;
}
